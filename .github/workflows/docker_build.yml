
on:
  workflow_call: 
    inputs:
      service:
        required: true
        type: string
      image:
        required: true
        type: string
      context:
        required: true
        type: string
      
      
jobs:
  voting-app:
    
    permissions:
      contents: read
      id-token: write    # for keyless Cosign signatures

    env:
      IMAGE_NAME: ${{ inputs.image }}
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v5.0.0

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3.6.0
      
      - name:  Set up Docker Buildx
        uses:  docker/setup-buildx-action@v3.11.1

          
      - name: Build (no push)
        id: build-local
        uses: docker/build-push-action@v4
        with:
          platforms: linux/amd64
          context: ${{ inputs.context }}
          load: true
          push: false
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:tmp
          cache-from: type=gha
          cache-to: type=gha,mode=max

      #  Vulnerability scan
      - name: Run Trivy Scanner
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:tmp
          format: table
          exit-code: '1'
          ignore-unfixed: true
          vuln-type: 'os,library'
          severity: 'CRITICAL,HIGH'
      
      - name: Login to Docker Registry
        uses: docker/login-action@v3.6.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN  }}
    
      - name: Get the tag name
        id: get_version
        run: echo "VERSION=git-${GITHUB_SHA::7}" >> "$GITHUB_OUTPUT"

      - name: Build and push ${{ inputs.service }} Docker images
        uses: docker/build-push-action@v6.18.0
        id: build-and-push
        with:
          context: ${{ inputs.context }}
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:buildcache,mode=max
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:${{ steps.get_version.outputs.VERSION }}
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}:latest
      
      
      - name: Install Cosign
        uses: sigstore/cosign-installer@v3.10.0


      # Sign the pushed image
      - name: Sign with Cosign
        env:
          COSIGN_EXPERIMENTAL: "1"
        run: |
          cosign sign --yes docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }}

      # (Optional) verify
      - name: Verify signature
        run: |
          cosign verify docker.io/${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}@${{ steps.build-and-push.outputs.digest }} \
            --certificate-identity="https://github.com/${{ github.repository }}/.github/workflows/docker_build.yml@${{ github.ref }}" \
            --certificate-oidc-issuer=https://token.actions.githubusercontent.com